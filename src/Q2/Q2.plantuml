@startuml

title __Q2's Class Diagram__\n

  namespace Q2 {
    class Q2.Corporate {
        - country : String
        - taxID : String
        + Corporate()
        + generateReport()
        + getCountry()
        + getTaxID()
    }
  }
  

  namespace Q2 {
    abstract class Q2.Customer {
        - CustomerID : int
        - discountRate : double
        - name : String
        - orders : List<RentalOrder>
        + Customer()
        + addOrder()
        {abstract} + generateReport()
        + getCustomerID()
        + getDiscountRate()
        + getName()
        + getOrderHistory()
        + removeOrder()
    }
  }
  

  namespace Q2 {
    class Q2.Individual {
        - age : int
        - state : String
        - zip : String
        + Individual()
        + generateReport()
        + getAge()
        + getState()
        + getZip()
    }
  }
  

  namespace Q2 {
    class Q2.Inventory {
        - inventoryID : int
        - vehicles : List<Vehicle>
        + Inventory()
        + addVehicle()
        + generateReport()
        + getInventoryID()
        + getType()
        + getVehicles()
        + removeVehicle()
        + setInventoryID()
        + setType()
    }
  }
  

  namespace Q2 {
    class Q2.Main {
        {static} + main()
    }
  }
  

  namespace Q2 {
    class Q2.RentalOffice {
        {static} - instance : RentalOffice
        - inventories : Map<String, Inventory>
        - locationZip : String
        - officeID : int
        - orderHistory : ArrayList<RentalOrder>
        + RentalOffice()
        + addInventory()
        + addOrder()
        + generateReport()
        {static} + getInstance()
        + getInventories()
        + getLocationZip()
        + getOfficeID()
        + getOrderHistory()
        + removeInventory()
        + setLocationZip()
        + setOfficeID()
    }
  }
  

  namespace Q2 {
    class Q2.RentalOrder {
        - rentalLength : int
        - totalCost : double
        + RentalOrder()
        + RentalOrder()
        + calculateTotalCost()
        + completeOrder()
        + generateReport()
        + getCustomer()
        + getRentalLength()
        + getTotalCost()
        + getVehicle()
    }
  }
  

  namespace Q2 {
    class Q2.Report {
        {static} + persistToCSV()
        {static} + printToConsole()
    }
  }
  

  namespace Q2 {
    interface Q2.Reportable {
        {abstract} + generateReport()
    }
  }
  

  namespace Q2 {
    class Q2.Vehicle {
        - available : boolean
        - dailyRate : double
        - make : String
        - mileage : int
        - model : String
        - vehicleID : int
        - year : int
        + Vehicle()
        + generateReport()
        + getDailyRate()
        + getMake()
        + getMileage()
        + getModel()
        + getType()
        + getVehicleID()
        + getYear()
        + isAvailable()
        + setAvailable()
        + setDailyRate()
        + setMake()
        + setMileage()
        + setModel()
        + setType()
        + setVehicleID()
        + setYear()
    }
  }
  

  namespace Q2 {
    enum VehicleType {
      CAR
      SUV
      TRUCK
    }
  }
  

  Q2.Corporate .up.|> Q2.Reportable
  Q2.Corporate -up-|> Q2.Customer
  Q2.Customer .up.|> Q2.Reportable
  Q2.Individual .up.|> Q2.Reportable
  Q2.Individual -up-|> Q2.Customer
  Q2.Inventory .up.|> Q2.Reportable
  Q2.Inventory o-- Q2.VehicleType : type
  Q2.RentalOffice .up.|> Q2.Reportable
  Q2.RentalOrder o-- Q2.Customer : customer
  Q2.RentalOrder o-- Q2.Vehicle : vehicle
  Q2.Vehicle o-- Q2.VehicleType : type


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
